"""
Django settings for django_demo project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-4qs%q)spp_@+$ygksmz)^png4#o#88$fkk!lu$i$sio&^dm*5@"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "daphne",
    "django_apscheduler",
    "django.contrib.staticfiles",
    "rest_framework",
    'corsheaders',
    'after_response',
    'src.Login',
    'src.Index',
    'src.Sys',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'middleWare.middleWare.MyMiddle',
]

ROOT_URLCONF = "django_demo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "django_demo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
# 数据库连接配置，可自行修改
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'django_demo_db',
        'USER': 'postgres',
        'PASSWORD': 'feng1991',
        'HOST': '10.10.25.111',
        'PORT': '5432',
        "CONN_MAX_AGE": 60,  # 链接存活60秒
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/


LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
# 缓存相关配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://localhost:6379/8",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 500, 'decode_responses': 'True'}, #
            # "PASSWORD": "pwd",
        }
    }
}
REST_FRAMEWORK = {
'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
}

ASGI_APPLICATION = "django_demo.asgi.application"
CORS_ALLOW_CREDENTIALS = True  # 指明在跨域访问中，后端是否支持对cookie的操作
CORS_ORIGIN_ALLOW_ALL = True   # 设置支持所有域名访问,如果为False,需要指定域名
CORS_ORIGIN_WHITELIST = ()   # 白名单，"*"支持所有域名进行访问，也可写成("域名1","域名")
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
    'HTTP_AUTHORIZATION'

)
import os
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
IMG_CHECK = ['png', 'jpg', 'jpeg', 'gif']
# STATICFILES_DIRS = [
#             os.path.join(BASE_DIR, "static"),
# 			]
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# python manage.py collectstatic



RABMQ_HOST: str = "10.10.xx.xxx" if DEBUG else 'xxx.xxx.xx.xxx'
RABMQ_PORT:int = 5672
RABMQ_USERNAME: str = "xxx" if DEBUG else 'xxx'
RABMQ_PASSWORD: str = "xxxxxx" if DEBUG else 'xxxxx'
RABMQ_VHOST: str = "/"


# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels.layers.InMemoryChannelLayer',
#         # 你也可以用其他后端，比如 Redis：
#         # 'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         # 'CONFIG': {
#         #     "hosts": [('127.0.0.1', 6379)],
#         # },
#     },
# }
from loguru import logger
LOG_DIR = os.path.join(BASE_DIR.parent, "loguru_logs")
if not os.path.exists(LOG_DIR):
    os.mkdir(LOG_DIR)
logger.add(f'{BASE_DIR.parent}/loguru_logs/loguru.log',
           format="{time:YYYY-MM-DD HH:mm:ss}|{level}|line:{line}|{message}",
           catch=True,
           # rotation='00:00',  # 每天0点生成一个 1 week
           level="INFO",
           rotation="10 MB",  # 日志大小
           # compression='zip', # 压缩为zip
           # retention='7 days',  # 保留7天
           backtrace=True,  # 追踪错误
           diagnose=True,  #
           enqueue=True,  # # 默认线程安全 指定异步和多进程安全
           encoding='utf-8')
